#include <iostream>
#include <string>
#include <vector>
#include <cstdlib>
#include <ctime>

// Function to generate a random password
std::string generatePassword(int length) {
    // Define the characters that can be used in the password
    const std::string lowercase = "abcdefghijklmnopqrstuvwxyz";
    const std::string uppercase = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
    const std::string digits = "0123456789";
    const std::string special = "!@#$%^&*()_+-=[]{}|;:,.<>?";

    // Combine all character sets
    const std::string allChars = lowercase + uppercase + digits + special;

    // Initialize an empty string to store the password
    std::string password = "";

    // Generate the password
    for (int i = 0; i < length; ++i) {
        // Generate a random index to select a character from allChars
        int randomIndex = rand() % allChars.length();
        // Add the randomly selected character to the password
        password += allChars[randomIndex];
    }

    return password;
}

int main() {
    // Seed the random number generator with the current time
    // This ensures that we get different random numbers each time we run the program
    srand(static_cast<unsigned int>(time(0)));

    // Declare a variable to store the desired password length
    int passwordLength;

    // Prompt the user for the desired password length
    std::cout << "Enter the desired password length: ";
    std::cin >> passwordLength;

    // Input validation: ensure the password length is at least 8 characters
    while (passwordLength < 8) {
        std::cout << "Password should be at least 8 characters long. Please try again: ";
        std::cin >> passwordLength;
    }

    // Generate the password using our function
    std::string generatedPassword = generatePassword(passwordLength);

    // Display the generated password
    std::cout << "Your generated password is: " << generatedPassword << std::endl;

    return 0;
}
