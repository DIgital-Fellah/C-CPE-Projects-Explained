#include <iostream>
#include <vector>
#include <string>

// Function to display the menu options
void displayMenu() {
    std::cout << "\n==== To-Do List Menu ====\n";
    std::cout << "1. Add a task\n";
    std::cout << "2. View tasks\n";
    std::cout << "3. Mark task as complete\n";
    std::cout << "4. Exit\n";
    std::cout << "Enter your choice (1-4): ";
}

// Function to add a task to the to-do list
void addTask(std::vector<std::string>& tasks) {
    std::string task;
    std::cout << "Enter the task: ";
    // Use getline to allow for tasks with spaces
    std::getline(std::cin >> std::ws, task);
    // Add the task to the vector
    tasks.push_back(task);
    std::cout << "Task added successfully!\n";
}

// Function to display all tasks in the to-do list
void viewTasks(const std::vector<std::string>& tasks) {
    if (tasks.empty()) {
        std::cout << "No tasks in the list.\n";
    } else {
        std::cout << "\n==== Your To-Do List ====\n";
        // Loop through the vector and display each task with its index
        for (size_t i = 0; i < tasks.size(); ++i) {
            std::cout << i + 1 << ". " << tasks[i] << "\n";
        }
    }
}

// Function to mark a task as complete (remove it from the list)
void markTaskComplete(std::vector<std::string>& tasks) {
    if (tasks.empty()) {
        std::cout << "No tasks to mark as complete.\n";
        return;
    }

    viewTasks(tasks);
    int taskNumber;
    std::cout << "Enter the number of the task to mark as complete: ";
    std::cin >> taskNumber;

    // Check if the entered task number is valid
    if (taskNumber < 1 || taskNumber > static_cast<int>(tasks.size())) {
        std::cout << "Invalid task number.\n";
    } else {
        // Remove the task from the vector
        tasks.erase(tasks.begin() + taskNumber - 1);
        std::cout << "Task marked as complete and removed from the list.\n";
    }
}

int main() {
    // Create a vector to store the tasks
    std::vector<std::string> todoList;
    int choice;

    std::cout << "Welcome to the Simple To-Do List!\n";

    // Main program loop
    while (true) {
        displayMenu();
        std::cin >> choice;

        // Clear the input buffer
        std::cin.ignore(std::numeric_limits<std::streamsize>::max(), '\n');

        // Use a switch statement to handle user choices
        switch (choice) {
            case 1:
                addTask(todoList);
                break;
            case 2:
                viewTasks(todoList);
                break;
            case 3:
                markTaskComplete(todoList);
                break;
            case 4:
                std::cout << "Thank you for using the Simple To-Do List. Goodbye!\n";
                return 0;
            default:
                std::cout << "Invalid choice. Please try again.\n";
        }
    }

    return 0;
}
